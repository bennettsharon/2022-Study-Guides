Module 4

KQL examples

Let

//Let for variables
let timeOffset = 7d;
let discardEventId = 4688;
SecurityEvent
| where TimeGenerated > ago(timeOffset*2) and TimeGenerated < ago(timeOffset)
| where EventID != discardEventId
| take 20 //used to limit the results

//Let for table
let LowActivityAccounts =
    SecurityEvent 
    | summarize cnt = count() by Account 
    | where cnt < 10;

LowActivityAccounts | where Account contains "Mal"

Search

//search
search "err"
|take 20

//Search in tables
search in (SecurityEvent,SecurityAlert,A*) "err"


Where 

SecurityEvent
| where TimeGenerated > ago(1d)

SecurityEvent
| where TimeGenerated > ago(1h) and EventID == "4624"

SecurityEvent
| where TimeGenerated > ago(1h)
| where EventID == 4624
| where AccountType =~ "user"

SecurityEvent | where EventID in (4624, 4625)


Extend

//ProcessName
SecurityEvent
| where ProcessName != "" and Process != ""
| extend StartDir =  substring(ProcessName,0, string_size(ProcessName)-string_size(Process))
|take 20 

Example 2

//Computer Name Length
SecurityEvent
| extend ComputerNameLenght = strlen(Computer)
|take 20


Order by operator

SecurityEvent
| where ProcessName != "" and Process != ""
| extend StartDir =  substring(ProcessName,0, string_size(ProcessName)-string_size(Process))
| order by StartDir desc, Process asc
| take 5

Slide 12
Example 1
SecurityEvent
| project Computer, Account
|take 10

Example 2

SecurityEvent
| where ProcessName != "" and Process != ""
| extend StartDir =  substring(ProcessName,0, string_size(ProcessName)-string_size(Process))
| order by StartDir desc, Process asc
| project-away ProcessName
|take 10

Example 3

SecurityEvent
| where ProcessName != "" and Process != ""
| extend StartDir =  substring(ProcessName,0, string_size(ProcessName)-string_size(Process))
| order by StartDir desc, Process asc
| take 5
|project StartDir, AccountType

Example 4
SecurityEvent
| where ProcessName != "" and Process != ""
| extend StartDir =  substring(ProcessName,0, string_size(ProcessName)-string_size(Process))
| order by StartDir desc, Process asc
| take 5

Summarize

Example 1

SecurityEvent
| summarize count() by Process, Computer
|take 10

Example 2 – Play with the timeframe go to 30 days
let timeframe = 1d;
let threshold = 3;
SigninLogs
| where TimeGenerated >= ago(timeframe)
| where ResultDescription has "MFA"
| summarize applicationCount = dcount(AppDisplayName) by UserPrincipalName, IPAddress
| where applicationCount >= threshold


Summarize to filter - remember it's case sensitive either contains or SQL12.na.contosohotles.com or use =~

	
SecurityEvent 
| where Computer == "SQL12.NA.contosohotels.com"
| summarize arg_max(TimeGenerated,*) by Computer

SecurityEvent 
| where Computer == "SQL12.NA.contosohotels.com"
| summarize arg_min(TimeGenerated,*) by Computer


Summarize List and Set
SecurityEvent
| where EventID == "4624"
| summarize make_list(Account) by Computer
|take 20

SecurityEvent
| where EventID == "4624"
| summarize make_set(Account) by Computer
|take 20


Visualizations

SecurityEvent 
| summarize count() by Account
| render barchart
Add the |take 20


SecurityEvent 
| summarize count() by bin(TimeGenerated, 1d) 
| render timechart


Union Operator

Example 1 – it’s long running. Add a take 20
SecurityEvent | union SigninLogs  

Example 2
SecurityEvent 
| union SigninLogs  
| summarize count() 
| project count_


Example 3 – long running – add a take 20
SecurityEvent 
| union (SigninLogs | summarize count()| project count_)

Notice the difference in time between 2 and 3. 

Example 4 - All security tables by count
union Security* 
| summarize count() by Type


Join Operator
Example
SecurityEvent //table name 
| join Heartbeat on Computer //joining SecurityEvent with Heartbeat on the common Computer column 
| where EventID == "4688" //Looking for Event ID for new process 
| project Computer, OSType, OSMajorVersion, Version //Displaying data from both tables



Join
SecurityEvent 
| where EventID == "4624" 
| summarize LogOnCount=count() by EventID, Account 
| project LogOnCount, Account 
| join kind = inner (
     SecurityEvent 
     | where EventID == "4634" 
     | summarize LogOffCount=count() by EventID, Account 
     | project LogOffCount, Account 
) on Account


Extract


SecurityEvent
| where EventID == 4672 and AccountType == 'User'
| extend Account_Name = extract(@"^(.*\\)?([^@]*)(@.*)?$", 2, tolower(Account))
| summarize LoginCount = count() by Account_Name
| where Account_Name != ""
| where LoginCount < 10


Parse

let Traces = datatable(EventText:string)
[
"Event: NotifySliceRelease (resourceName=PipelineScheduler, totalSlices=27, sliceNumber=23, lockTime=02/17/2016 08:40:01, releaseTime=02/17/2016 08:40:01, previousLockTime=02/17/2016 08:39:01)",
"Event: NotifySliceRelease (resourceName=PipelineScheduler, totalSlices=27, sliceNumber=15, lockTime=02/17/2016 08:40:00, releaseTime=02/17/2016 08:40:00, previousLockTime=02/17/2016 08:39:00)",
"Event: NotifySliceRelease (resourceName=PipelineScheduler, totalSlices=27, sliceNumber=20, lockTime=02/17/2016 08:40:01, releaseTime=02/17/2016 08:40:01, previousLockTime=02/17/2016 08:39:01)",
"Event: NotifySliceRelease (resourceName=PipelineScheduler, totalSlices=27, sliceNumber=22, lockTime=02/17/2016 08:41:01, releaseTime=02/17/2016 08:41:00, previousLockTime=02/17/2016 08:40:01)",
"Event: NotifySliceRelease (resourceName=PipelineScheduler, totalSlices=27, sliceNumber=16, lockTime=02/17/2016 08:41:00, releaseTime=02/17/2016 08:41:00, previousLockTime=02/17/2016 08:40:00)"
];
Traces  
| parse EventText with * "resourceName=" resourceName ", totalSlices=" totalSlices:long * "sliceNumber=" sliceNumber:long * "lockTime=" lockTime ", releaseTime=" releaseTime:date "," * "previousLockTime=" previousLockTime:date ")" *  
| project resourceName, totalSlices, sliceNumber, lockTime, releaseTime, previousLockTime


Structured data extract

SigninLogs 
| extend OS = DeviceDetail.operatingSystem
|take 20

JSON data
SigninLogs
| extend Location =  todynamic(LocationDetails)
| extend City =  Location.city
| extend City2 = Location["city"]
| project Location, City, City2



